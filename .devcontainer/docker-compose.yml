version: '3'

services:

  webserver:
    image: webserver
    container_name: webserver
    depends_on:
      - api
    build:
      context: ./nginx
    ports:
      - 3200:3200
    networks:
      - nginx_network

  api:
    tty: true
    image: api
    container_name: api
    build:
      context: ./app
    depends_on:
      - db
    environment:
      POSTGRES_DB: djangoapp
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - 8000:8000
    restart: on-failure
    networks:
        - nginx_network

  db:
    image: db
    container_name: db
    healthcheck:
      # test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root", "-P", "root" ]
      timeout: 45s
      interval: 10s
      retries: 10
    # environment:
    #   POSTGRES_USER: root
    #   POSTGRES_PASSWORD: root
    restart: always
    build:
      context: ./db
    volumes:
      - postgres:/data/postgres
    ports:
      - 5432:5432
    networks:
      - nginx_network

  test:
    image: test
    container_name: test
    privileged: true
    user: root
    ports:
      - 8090:8080
    build:
      context: ./jenkins
    volumes:
      - /home/${myname}/jenkins_compose/jenkins_configuration:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - nginx_network

networks:
  nginx_network:
    name: nginx_network
    driver: bridge

volumes:
  postgres: