node {
  checkout scm

  def withDockerNetwork(Closure inner) {
    try {
      sh "docker network connect nginx_network db"
      inner.call("nginx_network")
    }, funnaly {
      sh "docker network rm nginx_network"
    }
  }

  withDockerNetwork{ n ->
    docker.image('db').withRun("--network ${n} --name db") { c->
      docker.image('api').inside("--network ${n}") {
        // do something with host "sidecar"

        sh 'python app/manage.py test ./app'
      }
    }
} 
}

// pipeline {
//     agent none
//     stages {
//         stage('Run Tests') {
//             parallel {
//                 stage('Version Python') {
//                     agent {
//                         docker {
//                           image 'api'
//                         }
//                     }
//                     steps {
//                       sh 'python --version'
//                     }
//                 }
//                 stage('Test Django') {
//                     agent {
//                       docker {
//                         image 'db'
//                       }
//                     }
//                     steps {
//                       sh 'python app/manage.py test ./app'
//                     }
//                 }
//             }
//         }
//     }
// }