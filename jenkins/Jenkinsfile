def withDockerNetwork(Closure inner) {
   try {
      sh "docker run -itd --network=nginx_network db"
      inner.call("nginx_network")
    } finally {
      // sh "docker network rm nginx_network"
    }
  }

pipeline {
  agent none

  environment {
    DEBUG = 1
    POSTGRES_DB = 'djangoapp'
    POSTGRES_USER = 'root'
    POSTGRES_PASSWORD = 'samarinda'
    POSTGRES_HOST = 'db'
    POSTGRES_PORT = 5432
    SECRET_KEY = 'uh6=n!7#2w$0w7&&rivs!_1efeo9g-!o1%2_b5!6y5t@ncr#'
  }

  stages {
    stage("build") {
      agent any

      steps {
        sh 'echo build'
      }
    }

    stage("test") {
      agent any

      steps {
        script {
          // image local
          def database = docker.image('haidinata/db:v1')
          def app = docker.image('haidinata/api:v1')

          sh 'python --version'
        }
      }
    }

    // docker exec -it api bash

    // stage("deploy") {
    //   agent any

    //   steps {
    //     sshagent(credentials : ['ssh']) {
    //       sh 'ssh root@139.180.213.137 "cd /home/docker-django "'
    //       // sh 'docker pull haidinata/webserver:v1'
    //       // sh 'docker images'
    //     }
    //   }
    // }
  }
}
